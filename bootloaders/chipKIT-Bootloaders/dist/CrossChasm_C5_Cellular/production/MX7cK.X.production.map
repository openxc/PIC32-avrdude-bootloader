
Allocating common symbols
Common symbol       size              file

endpoints           0x180             build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
bulk_out_ep         0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
scsi_attached_count
                    0x4               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
scsi_attached       0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
bulk_in_ep          0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
cdcacm_attached_count
                    0x4               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
int_ep              0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
other_attached      0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
cdcacm_active       0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
cdcacm_attached     0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
cdc_attached        0x1               build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d000000         0x3fd8       16344  App's exec code 
.rodata                 0x9d003fd8          0x1e8         488  Read-only const 
.dinit                  0x9d0041c0           0xa0         160   
.rodata                 0x9d004260           0x90         144  Read-only const 
.text                   0x9d0042f0           0x10          16  App's exec code 
      Total kseg0_program_mem used  :      0x4300       17152  3.3% of 0x80000

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg0_boot_mem used  :           0           0  <1% of 0x970

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
          Total exception_mem used  :           0           0  <1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.reset                  0xbfc00000          0x10c         268  Reset handler 
         Total kseg1_boot_mem used  :       0x10c         268  22.9% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0x440c       17420  3.3% of 0x81e00
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.sdata                  0xa0000000           0x2c          44  Small init data 
.sbss                   0xa000002c          0x15c         348  Small uninit data 
.bss                    0xa0000188          0x180         384  Uninitialized data 
.bss                    0xa0000308         0x1264        4708  Uninitialized data 
.bss                    0xa0001600          0x200         512  Uninitialized data 
         Total kseg1_data_mem used  :      0x176c        5996  4.6% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x176c        5996  4.6% of 0x20000
        --------------------------------------------------------------------------


Dynamic Data-Memory Reservation
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
heap                    0xa0001808           0x10          16  Reserved for heap 
stack                   0xa0001830        0x1e7c8      124872  Reserved for stack 

        --------------------------------------------------------------------------

Discarded input sections

 .reginfo       0x00000000       0x18 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .reginfo       0x00000000       0x18 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .reginfo       0x00000000       0x18 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
 .reginfo       0x00000000       0x18 c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX795F512H\processor.o

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x9d000000         0x00080000         xr
kseg0_boot_mem   0x9fc00490         0x00000970
exception_mem    0x9fc01000         0x00001000
kseg1_boot_mem   0xbfc00000         0x00000490
debug_exec_mem   0xbfc02000         0x00000ff0
config3          0xbfc02ff0         0x00000004
config2          0xbfc02ff4         0x00000004
config1          0xbfc02ff8         0x00000004
config0          0xbfc02ffc         0x00000004
kseg1_data_mem   0xa0000000         0x00020000         w !x
sfrs             0xbf800000         0x00100000
configsfrs       0xbfc02ff0         0x00000010
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
LOAD build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
LOAD build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
LOAD build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
                0x00000001                __MPLAB_BUILD = 0x1
                0x00000400                PROVIDE (_min_stack_size, 0x400)
LOAD c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX795F512H\processor.o
START GROUP
LOAD c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/mips16/no-float\libmchp_peripheral.a
END GROUP
START GROUP
LOAD c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/mips16/no-float\libmchp_peripheral_32MX795F512H.a
END GROUP
                0x00000001                PROVIDE (_vector_spacing, 0x1)
                0x9fc01000                _ebase_address = 0x9fc01000
                0xbfc00000                _RESET_ADDR = 0xbfc00000
                0xbfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0xbfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0xbfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x00000ff0                _DBG_CODE_SIZE = 0xff0
                0x9fc01180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
                0xbfc02ff0        0x4
 *(.config_BFC02FF0)
 .config_BFC02FF0
                0xbfc02ff0        0x4 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.config_BFC02FF4
                0xbfc02ff4        0x4
 *(.config_BFC02FF4)
 .config_BFC02FF4
                0xbfc02ff4        0x4 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.config_BFC02FF8
                0xbfc02ff8        0x4
 *(.config_BFC02FF8)
 .config_BFC02FF8
                0xbfc02ff8        0x4 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.config_BFC02FFC
                0xbfc02ffc        0x4
 *(.config_BFC02FFC)
 .config_BFC02FFC
                0xbfc02ffc        0x4 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
                0xbfc02000                PROVIDE (_DBG_CODE_ADDR, 0xbfc02000)
                0x00000ff0                PROVIDE (_DBG_CODE_SIZE, 0xff0)

.reset          0xbfc00000      0x10c
 *(.reset)
 .reset         0xbfc00000       0x10 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
                0xbfc00000                _reset
 *(.reset.startup)
 .reset.startup
                0xbfc00010       0xfc build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0xbfc00480        0x0
                0xbfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0xbfc02000        0x0
                0xbfc02000                . = (. + DEFINED (_DEBUGGER)?_DBG_CODE_SIZE:0x0)

.app_excpt
 *(.gen_handler)

.vector_0       0x9fc01200        0x0
 *(.vector_0)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x9fc01220        0x0
 *(.vector_1)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x9fc01240        0x0
 *(.vector_2)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x9fc01260        0x0
 *(.vector_3)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x9fc01280        0x0
 *(.vector_4)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x9fc012a0        0x0
 *(.vector_5)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x9fc012c0        0x0
 *(.vector_6)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x9fc012e0        0x0
 *(.vector_7)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x9fc01300        0x0
 *(.vector_8)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x9fc01320        0x0
 *(.vector_9)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x9fc01340        0x0
 *(.vector_10)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x9fc01360        0x0
 *(.vector_11)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x9fc01380        0x0
 *(.vector_12)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x9fc013a0        0x0
 *(.vector_13)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x9fc013c0        0x0
 *(.vector_14)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x9fc013e0        0x0
 *(.vector_15)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x9fc01400        0x0
 *(.vector_16)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x9fc01420        0x0
 *(.vector_17)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x9fc01440        0x0
 *(.vector_18)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x9fc01460        0x0
 *(.vector_19)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x9fc01480        0x0
 *(.vector_20)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x9fc014a0        0x0
 *(.vector_21)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x9fc014c0        0x0
 *(.vector_22)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x9fc014e0        0x0
 *(.vector_23)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x9fc01500        0x0
 *(.vector_24)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x9fc01520        0x0
 *(.vector_25)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x9fc01540        0x0
 *(.vector_26)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x9fc01560        0x0
 *(.vector_27)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x9fc01580        0x0
 *(.vector_28)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x9fc015a0        0x0
 *(.vector_29)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x9fc015c0        0x0
 *(.vector_30)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x9fc015e0        0x0
 *(.vector_31)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x9fc01600        0x0
 *(.vector_32)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x9fc01620        0x0
 *(.vector_33)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x9fc01640        0x0
 *(.vector_34)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x9fc01660        0x0
 *(.vector_35)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x9fc01680        0x0
 *(.vector_36)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x9fc016a0        0x0
 *(.vector_37)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x9fc016c0        0x0
 *(.vector_38)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x9fc016e0        0x0
 *(.vector_39)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x9fc01700        0x0
 *(.vector_40)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x9fc01720        0x0
 *(.vector_41)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x9fc01740        0x0
 *(.vector_42)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x9fc01760        0x0
 *(.vector_43)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x9fc01780        0x0
 *(.vector_44)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x9fc017a0        0x0
 *(.vector_45)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x9fc017c0        0x0
 *(.vector_46)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x9fc017e0        0x0
 *(.vector_47)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x9fc01800        0x0
 *(.vector_48)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x9fc01820        0x0
 *(.vector_49)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x9fc01840        0x0
 *(.vector_50)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x9fc01860        0x0
 *(.vector_51)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x9fc01880        0x0
 *(.vector_52)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x9fc018a0        0x0
 *(.vector_53)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x9fc018c0        0x0
 *(.vector_54)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x9fc018e0        0x0
 *(.vector_55)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x9fc01900        0x0
 *(.vector_56)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x9fc01920        0x0
 *(.vector_57)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x9fc01940        0x0
 *(.vector_58)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x9fc01960        0x0
 *(.vector_59)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x9fc01980        0x0
 *(.vector_60)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x9fc019a0        0x0
 *(.vector_61)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x9fc019c0        0x0
 *(.vector_62)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x9fc019e0        0x0
 *(.vector_63)
                0x00000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.startup
 *(.startup)

.text           0x9d000000        0x0
 *(.stub .gnu.linkonce.t.*)
 *(.text.*personality*)
 *(.mips16.fn.*)
 *(.mips16.call.*)
 *(.gnu.warning)
                0x9d000000                . = ALIGN (0x4)

.init           0x9d000000        0x0
 *crti.o(.init)
 *crtbegin.o(.init)
 *(EXCLUDE_FILE(*crtn.o *crtend?.o *crtend.o) .init)
 *crtend.o(.init)
 *crtn.o(.init)
                0x9d000000                . = ALIGN (0x4)

.fini           0x9d000000        0x0
 *(.fini)
                0x9d000000                . = ALIGN (0x4)

.preinit_array  0x9d000000        0x0
                0x9d000000                PROVIDE (__preinit_array_start, .)
 *(.preinit_array)
                0x9d000000                PROVIDE (__preinit_array_end, .)
                0x9d000000                . = ALIGN (0x4)

.init_array     0x9d000000        0x0
                0x9d000000                PROVIDE (__init_array_start, .)
 *(SORT(.init_array.*))
 *(.init_array)
                0x9d000000                PROVIDE (__init_array_end, .)
                0x9d000000                . = ALIGN (0x4)

.fini_array     0x9d000000        0x0
                0x9d000000                PROVIDE (__fini_array_start, .)
 *(SORT(.fini_array.*))
 *(.fini_array)
                0x9d000000                PROVIDE (__fini_array_end, .)
                0x9d000000                . = ALIGN (0x4)

.ctors          0x9d000000        0x0
 *crtbegin.o(.ctors)
 *crtbegin?.o(.ctors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .ctors)
 *(SORT(.ctors.*))
 *(.ctors)
                0x9d000000                . = ALIGN (0x4)

.dtors          0x9d000000        0x0
 *crtbegin.o(.dtors)
 *crtbegin?.o(.dtors)
 *(EXCLUDE_FILE(*crtend?.o *crtend.o) .dtors)
 *(SORT(.dtors.*))
 *(.dtors)
                0x9d000000                . = ALIGN (0x4)

.rodata         0x9d000000        0x0
 *(.gnu.linkonce.r.*)
 *(.rodata1)
                0x9d000000                . = ALIGN (0x4)

.sdata2         0x9fc00490        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x9fc00490                . = ALIGN (0x4)

.sbss2          0x9fc00490        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x9fc00490                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)
                0x9fc00490                . = ALIGN (0x4)

.eh_frame
 *(.eh_frame)
                0x9fc00490                . = ALIGN (0x4)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)
                0x9fc00490                . = ALIGN (0x4)

.dbg_data       0xa0000000        0x0
                0xa0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.jcr            0xa0000000        0x0
 *(.jcr)
                0xa0000000                . = ALIGN (0x4)

.eh_frame
 *(.eh_frame)
                0xa0000000                . = ALIGN (0x4)

.gcc_except_table
 *(.gcc_except_table .gcc_except_table.*)
                0xa0000000                . = ALIGN (0x4)

.persist        0xa0000000        0x0
                0xa0000000                _persist_begin = .
 *(.persist .persist.*)
 *(.pbss .pbss.*)
                0xa0000000                . = ALIGN (0x4)
                0xa0000000                _persist_end = .

.data           0xa0000000        0x0
 *(.gnu.linkonce.d.*)
 *(.data1)
                0xa0000000                . = ALIGN (0x4)
                0xa0000000                . = .
                0xa0007ff0                _gp = (ALIGN (0x10) + 0x7ff0)

.got            0xa0000000        0x0
 *(.got.plt)
 *(.got)
                0xa0000000                . = ALIGN (0x4)

.sdata          0xa0000000       0x2c
                0xa0000000                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0xa0000000        0x8 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .sdata         0xa0000008       0x24 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
                0xa0000008                gCrc
                0xa000002c                . = ALIGN (0x4)
                0xa000002c                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0xa000002c                . = ALIGN (0x4)
                0xa000002c                _data_end = .
                0xa000002c                _bss_begin = .

.sbss           0xa000002c      0x15c
                0xa000002c                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0xa000002c        0x8 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .sbss          0xa0000034       0x38 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .sbss          0xa000006c      0x104 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
                0xa000006c                telit_initialized
                0xa000006d                FlashProgramming
 *(.scommon)
 .scommon       0xa0000170        0x1 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
                0xa0000170                cdcacm_active
 *fill*         0xa0000171        0x3 
 .scommon       0xa0000174       0x14 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
                0xa0000174                bulk_out_ep
                0xa0000178                scsi_attached_count
                0xa000017c                scsi_attached
                0xa000017d                bulk_in_ep
                0xa0000180                cdcacm_attached_count
                0xa0000184                int_ep
                0xa0000185                other_attached
                0xa0000186                cdcacm_attached
                0xa0000187                cdc_attached
                0xa0000188                _sbss_end = .
                0xa0000188                . = ALIGN (0x4)

.bss            0xa0000188      0x180
 *(.dynbss)
 *(COMMON)
 COMMON         0xa0000188      0x180 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
                0xa0000188                endpoints
                0xa0000308                . = ALIGN ((. != 0x0)?0x4:0x1)
                0xa0000308                . = ALIGN (0x4)
                0xa0000308                _end = .
                0xa0000308                _bss_end = .
                0x00020000                _bmxdudba_address = 0x20000
                0x00020000                _bmxdupba_address = 0x20000

/DISCARD/
 *(.pdr)
 *(.rel.dyn)
 *(.note.GNU-stack)
 *(.note.GNU-stack)
 *(.gnu_debuglink)
 *(.gnu.lto_*)
 *(.discard)

.gptab.sdata
 *(.gptab.data)
 *(.gptab.sdata)

.gptab.sbss
 *(.gptab.bss)
 *(.gptab.sbss)

.mdebug.abi32   0xa0000308        0x0
 *(.mdebug.abi32)
 .mdebug.abi32  0xa0000308        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .mdebug.abi32  0xa0000308        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .mdebug.abi32  0xa0000308        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.mdebug.abiN32
 *(.mdebug.abiN32)

.mdebug.abi64
 *(.mdebug.abi64)

.mdebug.abiO64
 *(.mdebug.abiO64)

.mdebug.eabi32
 *(.mdebug.eabi32)

.mdebug.eabi64
 *(.mdebug.eabi64)

.gcc_compiled_long32
 *(.gcc_compiled_long32)

.gcc_compiled_long64
 *(.gcc_compiled_long64)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x3c
 *(.comment)
 .comment       0x00000000       0x3c build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
                                 0x3d (size before relaxing)
 .comment       0x00000000       0x3d build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .comment       0x00000000       0x3d build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x90
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x30 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
 .debug_aranges
                0x00000030       0x20 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_aranges
                0x00000050       0x20 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_aranges
                0x00000070       0x20 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_pubnames
                0x00000000      0x41a
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x74 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_pubnames
                0x00000074      0x177 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_pubnames
                0x000001eb      0x22f build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_info     0x00000000     0x593f
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x00000000       0x9f build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
 .debug_info    0x0000009f      0xe20 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_info    0x00000ebf     0x158d build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_info    0x0000244c     0x34f3 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_abbrev   0x00000000      0xa66
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x12 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
 .debug_abbrev  0x00000012      0x2e3 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_abbrev  0x000002f5      0x31c build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_abbrev  0x00000611      0x455 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_line     0x00000000      0xe5c
 *(.debug_line)
 .debug_line    0x00000000       0xa2 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
 .debug_line    0x000000a2      0x219 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_line    0x000002bb      0x2df build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_line    0x0000059a      0x8c2 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_frame    0x00000000      0x4c0
 *(.debug_frame)
 .debug_frame   0x00000000       0xb8 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_frame   0x000000b8       0xb0 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_frame   0x00000168      0x358 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_str      0x00000000      0x27f
 *(.debug_str)
 .debug_str     0x00000000       0x6a build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_str     0x0000006a       0xb9 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_str     0x00000123      0x15c build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_loc      0x00000000     0x130e
 *(.debug_loc)
 .debug_loc     0x00000000      0x2f2 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_loc     0x000002f2      0x53b build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_loc     0x0000082d      0xae1 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
                0x00000000      0x2ac
 *(.debug_pubtypes)
 .debug_pubtypes
                0x00000000       0x73 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
 .debug_pubtypes
                0x00000073       0xca build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
 .debug_pubtypes
                0x0000013d      0x16f build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.debug_ranges   0x00000000       0x28
 *(.debug_ranges)
 .debug_ranges  0x00000000       0x28 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o

.gnu.attributes
 *(.gnu.attributes)
OUTPUT(dist/CrossChasm_C5_Cellular/production/chipKIT-Bootloaders.production.elf elf32-tradlittlemips)
LOAD stack
LOAD data_init

.reginfo        0x00000000       0x18
 .reginfo       0x00000000       0x18 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o

.stack          0xa0001830      0x400
 .stack         0xa0001830      0x400 stack

.bss            0xa0000308     0x1264
 .bss           0xa0000308      0xdf4 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
 .bss           0xa00010fc      0x470 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o

.bss            0xa0001600      0x200
 .bss           0xa0001600      0x200 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o

.bss%z1         0x00000000        0x0
 .bss           0x00000000        0x0 c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX795F512H\processor.o

.data%z2        0x00000000        0x0
 .data          0x00000000        0x0 c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX795F512H\processor.o

.data%z3        0x00000000        0x0
 .data          0x00000000        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.data%z4        0x00000000        0x0
 .data          0x00000000        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o

.data%z5        0x00000000        0x0
 .data          0x00000000        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o

.bss%z6         0x00000000        0x0
 .bss           0x00000000        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o

.data%z7        0x00000000        0x0
 .data          0x00000000        0x0 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o

.text           0x9d000000     0x3fd8
 .text          0x9d000000     0x2f70 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o
                0x9d0005c8                avrbl_state_machine
                0x9d0006e0                ConvertAsciiToHex
                0x9d00077c                uart_find
                0x9d0007f0                finder
                0x9d000850                uart_tx
                0x9d000894                uart_rx_full
                0x9d0008c4                uart_rx_empty
                0x9d0008e0                uart_rx_pop
                0x9d000928                uart_rx_push
                0x9d00097c                uart_rx
                0x9d000a18                uart_clear
                0x9d000a70                uart_rx_reset
                0x9d000a8c                crc16Init
                0x9d000a98                crc16Add
                0x9d000b18                WriteHexRecord2Flash
                0x9d000f48                UpgradeFromModem
                0x9d00103c                crc16Reflected
                0x9d001070                telit_socketstatus
                0x9d0011cc                telit_readsocket
                0x9d0013fc                telit_cflo
                0x9d001554                telit_getbackupinfo
                0x9d001768                telit_findbackup
                0x9d00188c                telit_makebackup
                0x9d001c08                telit_restorebackup
                0x9d0020b4                hexloader
                0x9d002288                otaloader
                0x9d0025d0                otarestore
                0x9d00287c                main
 .text          0x9d002f70      0xb4c build/CrossChasm_C5_Cellular/production/_ext/1472/usb.o
                0x9d002f70                usb_device_enqueue
                0x9d003078                usb_isr
                0x9d003904                usb_register
                0x9d003914                usb_device_descriptor
                0x9d003920                usb_configuration_descriptor
                0x9d00392c                usb_string_descriptor
                0x9d003938                usb_uninitialize
                0x9d003a38                usb_initialize
 .text          0x9d003abc      0x51c build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o
                0x9d003d00                cdcacm_print
                0x9d003f14                cdcacm_command_ack
                0x9d003f50                cdcacm_register
                0x9d003fd0                null_reset_cbfn

.rodata         0x9d003fd8      0x1e8
 .rodata        0x9d003fd8      0x1e8 build/CrossChasm_C5_Cellular/production/_ext/1472/main_cellularc5.o

.dinit          0x9d0041c0       0xa0
 .dinit         0x9d0041c0       0xa0 data_init

.rodata         0x9d004260       0x90
 .rodata        0x9d004260       0x90 build/CrossChasm_C5_Cellular/production/_ext/1472/cdcacm.o

.text           0x9d0042f0       0x10
 .text          0x9d0042f0       0x10 build/CrossChasm_C5_Cellular/production/_ext/1472/crt0.o
                0x9d0042f8                __crt0_exit

.text%z8        0x00000000        0x0
 .text          0x00000000        0x0 c:/program files (x86)/microchip/xc32/v1.33/bin/bin/../../lib/gcc/pic32mx/4.5.2/../../../../pic32mx/lib/./proc/32MX795F512H\processor.o
